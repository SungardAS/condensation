{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    {{{parameter 'vpc_cidr' logicalId="VpcCidr"}}},
    {{{parameter 'module:particles-common-core' 'true_false' logicalId="CreateVpcSecurityGroup" default="false" description="[true|false] Create a security group assigned to the new VPC"}}},
    {{{parameter 'module:particles-common-core' 'true_false' logicalId="OpenVpcCommunication" default="false" description="[true|false] Open all communication within the VPC"}}},
    {{{parameter 'module:particles-common-core' 'true_false' logicalId="CreateInternetGateway" default="false" description="[true|false] Create an Internet Gateway for the VPC"}}},
    "NameTag": {
      "Description": "Will set the name tag on all resources created",
      "Type": "String"
    }
  },
  "Conditions": {
    {{{condition 'module:particles-common-core' 'is_true' name="CondCreateVpcSecurityGroup" parameterName="CreateVpcSecurityGroup"}}},
    {{{condition 'module:particles-common-core' 'is_true' name="CondOpenVpcCommunication" parameterName="OpenVpcCommunication"}}},
    {{{condition 'module:particles-common-core' 'is_true' name="CondCreateInternetGateway" parameterName="CreateInternetGateway"}}}
  },
  "Resources": {
    "vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcCidr"
        },
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "NameTag"
            }
          }
        ]
      }
    },
    "internetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Condition": "CondCreateInternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "NameTag"
            }
          }
        ]
      }
    },
    "networkACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        }
      }
    },
    "routeTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "NameTag"
            }
          }
        ]
      }
    },
    "VpcSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Condition": "CondCreateVpcSecurityGroup",
      "Properties": {
        "GroupDescription": "VPC Default Security Group",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "NameTag"
            }
          }
        ]
      }
    },
    "SecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CondOpenVpcCommunication",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": ["VpcSecurityGroup","GroupId"]
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": ["VpcSecurityGroup","GroupId"]
        }
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "networkACL"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "networkACL"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Condition": "CondCreateInternetGateway",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "InternetGatewayId": {
          "Ref": "internetGateway"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Condition": "CondCreateInternetGateway",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "routeTable"
        },
        "GatewayId": {
          "Ref": "internetGateway"
        }
      },
      "DependsOn": "gw1"
    }
  },
  "Description": "",
  "Outputs": {
    "VpcId": {
      "Value": {
        "Ref": "vpc"
      }
    },
    "RouteTableId": {
      "Value": {
        "Ref": "routeTable"
      }
    },
    "SecurityGroupId": {
      "Value": {
        "Ref": "VpcSecurityGroup"
      },
      "Condition": "CondCreateVpcSecurityGroup"
    }
  }
}
